WITH "MATCH (a:cVariable)
CALL apoc.aware.path.expandConfig(a, {
    relationshipFilter: 'parWrite>, varWrite>, <varWrite, <parWrite',
    labelFilter: 'cVariable',
    minLevel: 4,
    maxLevel:4
})
YIELD path WITH path, nodes(path) AS nodes
WHERE nodes[0].comp <> nodes[1].comp AND nodes[0].comp <> nodes[2].comp AND nodes[0].comp <> nodes[3].comp AND nodes[0].comp <> nodes[4].comp
AND nodes[0].id <> nodes[1].id AND nodes[0].id <> nodes[2].id AND nodes[0].id <> nodes[3].id AND nodes[0].id <> nodes[4].id

AND nodes[1].comp = nodes[2].comp AND nodes[1].comp = nodes[3].comp AND nodes[1].comp <> nodes[4].comp
AND nodes[1].id <> nodes[2].id AND nodes[1].id <> nodes[3].id AND nodes[1].id <> nodes[4].id

AND nodes[2].comp = nodes[3].comp AND nodes[2].comp <> nodes[4].comp
AND nodes[2].id <> nodes[3].id AND nodes[2].id <> nodes[4].id

AND nodes[3].comp <> nodes[4].comp AND nodes[3].id <> nodes[4].id

RETURN path" AS query
CALL apoc.export.csv.query(query, "neo4j-racecondition-aware.csv", {})
YIELD file, source, format, nodes, relationships, properties, time, rows, batchSize, batches, done, data
RETURN file, source, format, nodes, relationships, properties, time, rows, batchSize, batches, done, data;